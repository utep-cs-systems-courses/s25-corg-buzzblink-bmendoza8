#include <msp430.h>

#include "libTimer.h"



#define LED_RED BIT0
#define LED_GREEN BIT6
#define LEDS (LED_RED | LED_GREEN)

#define SW1 BIT0  // P2.0
#define SW2 BIT1  // P2.1
#define SW3 BIT2  // P2.2
#define SW4 BIT3  // P2.3
#define SWITCHES (SW1 | SW2 | SW3 | SW4)

#define BUZZER BIT6
extern char toggle_buzzer_state();

void switch_init();
void switch_interrupt_handler();
void handle_buzzer_button();
char buzzer_state = 0;

void switch_init() {
  P2REN |= SWITCHES;
  P2OUT |= SWITCHES;
  P2DIR &= ~SWITCHES;
  P2IE |= SWITCHES;
  P2IES |= SWITCHES;
  P2IFG &= ~SWITCHES;

}



//from chat GPT

void __attribute__((interrupt(PORT2_VECTOR))) Port_2() {
  switch_interrupt_handler();

  P2IFG &= ~SWITCHES;

}

void buzzer_init(){
  timerAUpmode();
  P2SEL2 &= ~(BIT6 | BIT7);
  P2SEL &= ~BIT7;
  P2SEL |= BIT6;
  P2DIR |= BIT6;
}

void buzzer_set_frequency(int frequen){
  CCR0 = frequen;
  CCR1 = frequen >> 1;
}
void handle_buzzer_button(){
  // buzzer_state = (buzzer_state + 1)%3;
  toggle_buzzer_state();
  if(buzzer_state ==1){
    buzzer_set_frequency(1000);
  }else if(buzzer_state == 2){
    buzzer_set_frequency(2000);
  }else{
    buzzer_set_frequency(0);
    buzzer_state = 0;
  }
}

void switch_interrupt_handler() {
  char p2val = P2IN;
  char switches = ~p2val & SWITCHES;
  
  if (!(p2val & SW1)) {
    P1OUT ^= LED_RED;
  }
  if (!(p2val & SW2)) {
    P1OUT ^= LED_GREEN;
  }
  if(!(p2val & SW3)){
    P1OUT ^= LED_GREEN;
    P1OUT ^= LED_RED;
  }
  if(switches & SW4){
    handle_buzzer_button();
    /* buzzer_state = (buzzer_state +1)%3;
    
    if(buzzer_state ==1){
      buzzer_set_frequency(1000);
    }else if(buzzer_state == 2){
      buzzer_set_frequency(2000);
    }else{
      buzzer_set_frequency(0);
      buzzer_state = 0;
      }*/
  }
  P2IFG &= ~SWITCHES;
}
int main(void){
  WDTCTL = WDTPW | WDTHOLD;
  configureClocks();
  BCSCTL1 = CALBC1_1MHZ;
  DCOCTL = CALDCO_1MHZ;
  buzzer_init();
  P1DIR |= LEDS;
  P1OUT &= ~LEDS;
  switch_init();
 
  __enable_interrupt();
   or_sr(0x18);
   while(1);
}
